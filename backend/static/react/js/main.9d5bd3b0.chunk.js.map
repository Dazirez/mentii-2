{"version":3,"sources":["Header.js","Welcome.js","Mentor.js","Footer.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","typographyStyles","flex","Wrapper","styled","div","Colored","span","Link","a","Welcome","src","Typography","variant","Button","color","href","Mentor","Card","style","marginTop","CardActionArea","CardMedia","height","image","title","CardContent","gutterBottom","component","CardActions","section","Text","p","Footer","Home","Grid","item","container","xs","sm","spacing","App","Fragment","exact","path","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","type","typography","h1","h6","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.9d5bd3b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar>\r\n                <Typography className={classes.typographyStyles}>\r\n                    Mentii\r\n                </Typography>\r\n                <PersonIcon />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n    margin-top: 100px;\r\n    top: 0;\r\n    left: 0;\r\n`;\r\n\r\nconst Colored = styled.span`\r\n    color: #f06191;\r\n`;\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: white;\r\n`;\r\nconst Welcome = () => {\r\n    return (\r\n        <Wrapper>\r\n            <img src=\"https://i.postimg.cc/g2N9jGsx/Welcome-Prof.png\"></img>\r\n            <Typography variant=\"h1\">\r\n                Menti<Colored>i</Colored>\r\n            </Typography>\r\n            <Typography variant=\"h6\">Find Your Mentor</Typography>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n                Log in\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n                <Link href=\"/Home\">Get Started</Link>\r\n            </Button>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport { Card, Avatar, Button } from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\n\r\nconst Mentor = () => {\r\n    return (\r\n        <div>\r\n            <Card style={{ marginTop: \"100px\" }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        style={{ height: \"100px\" }}\r\n                        image=\"/static/images/cards.jpg\"\r\n                        title=\"streamer\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Streamer 1\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                        Watch Stream\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Mentor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Wrapper = styled.section`\r\n    margin-top: 1rem;\r\n    padding: 1rem;\r\n    background-color: black;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    max-height: 100%;\r\n`;\r\nconst Text = styled.p`\r\n    color: white;\r\n    float: left;\r\n    margin-left: 150px;\r\n    font-size: 10px;\r\n`;\r\nconst Footer = () => (\r\n    <Wrapper>\r\n        <Text>Info</Text>\r\n        <Text>About</Text>\r\n        <Text>Contact</Text>\r\n        <Text>FAQ</Text>\r\n        <Text>Terms and Conditions | Private Policy</Text>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Mentor from \"./Mentor\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Grid item container>\r\n                <Grid xs={0} sm={2} />\r\n                <Grid item xs={12} sm={8}>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Mentor />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Mentor />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Mentor />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={0} sm={2} />\r\n            </Grid>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport styled from \"styled-components\";\nimport Welcome from \"./Welcome\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Welcome} />\n                    <Route path=\"/Welcome\" component={Welcome} />\n                    <Route path=\"/Home\" component={Home} />\n                </Switch>\n            </Router>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n    },\n    typography: {\n        h1: {\n            color: \"white\",\n        },\n        h6: {\n            color: \"white\",\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}